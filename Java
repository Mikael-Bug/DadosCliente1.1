import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Scanner;

class Cliente {
    private String matricula;
    private String nome;
    private String cep;

    public Cliente(String matricula, String nome, String cep) {
        this.matricula = matricula;
        this.nome = nome;
        this.cep = cep;
    }

    public String getMatricula() {
        return matricula;
    }

    public String getNome() {
        return nome;
    }

    public String getCep() {
        return cep;
    }
}

class PessoaFisica extends Cliente {
    private String telefone;
    private String dataNascimento;
    private String cpf;

    public PessoaFisica(String matricula, String nome, String telefone, String dataNascimento, String cep, String cpf) {
        super(matricula, nome, cep);
        this.telefone = telefone;
        this.dataNascimento = dataNascimento;
        this.cpf = cpf;
    }

    public String getTelefone() {
        return telefone;
    }

    public String getDataNascimento() {
        return dataNascimento;
    }

    public String getCpf() {
        return cpf;
    }
}

class PessoaJuridica extends Cliente {
    private String razaoSocial;
    private String cnpj;

    public PessoaJuridica(String matricula, String razaoSocial, String nome, String cep, String cnpj) {
        super(matricula, nome, cep);
        this.razaoSocial = razaoSocial;
        this.cnpj = cnpj;
    }

    public String getRazaoSocial() {
        return razaoSocial;
    }

    public String getCnpj() {
        return cnpj;
    }
}

public class Main {
    public static void main(String[] args) {
        List<Cliente> clientes = new ArrayList<>();
        Scanner scanner = new Scanner(System.in);

        while (true) {
            System.out.println("Digite o tipo de cliente (1 - Pessoa Física, 2 - Pessoa Jurídica, 0 - Sair):");
            int tipoCliente = scanner.nextInt();
            scanner.nextLine(); // Limpar o buffer

            if (tipoCliente == 0) {
                break;
            }

            System.out.print("Digite a matrícula: ");
            String matricula = scanner.nextLine();
            System.out.print("Digite o nome: ");
            String nome = scanner.nextLine();
            System.out.print("Digite o CEP: ");
            String cep = scanner.nextLine();

            if (tipoCliente == 1) {
                System.out.print("Digite o telefone: ");
                String telefone = scanner.nextLine();
                System.out.print("Digite a data de nascimento: ");
                String dataNascimento = scanner.nextLine();
                System.out.print("Digite o CPF: ");
                String cpf = scanner.nextLine();

                PessoaFisica pessoaFisica = new PessoaFisica(matricula, nome, telefone, dataNascimento, cep, cpf);
                clientes.add(pessoaFisica);
            } else if (tipoCliente == 2) {
                System.out.print("Digite a razão social: ");
                String razaoSocial = scanner.nextLine();
                System.out.print("Digite o CNPJ: ");
                String cnpj = scanner.nextLine();

                PessoaJuridica pessoaJuridica = new PessoaJuridica(matricula, razaoSocial, nome, cep, cnpj);
                clientes.add(pessoaJuridica);
            }
        }

        salvarDadosEmArquivo(clientes);
    }

    private static void salvarDadosEmArquivo(List<Cliente> clientes) {
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
        String dataHoraAtual = dateFormat.format(new Date());
        String nomeArquivo = clientes.get(0).getMatricula() + "_" + dataHoraAtual.replaceAll("[/\\s:]", "") + ".txt";

        try (PrintWriter writer = new PrintWriter(new FileWriter(nomeArquivo))) {
            writer.println("Data e Hora do Cadastro: " + dataHoraAtual);
            writer.println();

            for (Cliente cliente : clientes) {
                if (cliente instanceof PessoaFisica) {
                    PessoaFisica pessoaFisica = (PessoaFisica) cliente;
                    writer.println("Tipo: Pessoa Física");
                    writer.println("Matrícula: " + pessoaFisica.getMatricula());
                    writer.println("Nome: " + pessoaFisica.getNome());
                    writer.println("Telefone: " + pessoaFisica.getTelefone());
                    writer.println("Data de Nascimento: " + pessoaFisica.getDataNascimento());
                    writer.println("CEP: " + pessoaFisica.getCep());
                    writer.println("CPF: " + pessoaFisica.getCpf());
                } else if (cliente instanceof PessoaJuridica) {
                    PessoaJuridica pessoaJuridica = (PessoaJuridica) cliente;
                    writer.println("Tipo: Pessoa Jurídica");
                    writer.println("Matrícula: " + pessoaJuridica.getMatricula());
                    writer.println("Razão Social: " + pessoaJuridica.getRazaoSocial());
                    writer.println("Nome: " + pessoaJuridica.getNome());
                    writer.println("CEP: " + pessoaJuridica.getCep());
                    writer.println("CNPJ: " + pessoaJuridica.getCnpj());
                }

                writer.println();
            }

            System.out.println("Dados salvos no arquivo: " + nomeArquivo);
        } catch (IOException e) {
            System.out.println("Erro ao salvar dados no arquivo: " + e.getMessage());
        }
    }
}
